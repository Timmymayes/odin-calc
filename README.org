* Odin Calculator Project

This is a calculator project that will test my learnings during the foundational course.

** Capabilities:

*** Basic Functions
- Add
- Subtract
- Multiply
- Divide

  
*** Operate Function that takes 2 numbers and calls a basic funciton

*** Create an html calcualtor with buttons for each digit, eacah of hte above functiosn and an equals key
- Do not worry about wiring up the JS
- Make a display for the calcualtor and fill itwith dummy numbers/
- add a "clear" button to clear the screen

*** Create the functiosn that populate the display when you click number buttons.
- Store the "display value" for a later step

*** Make the calulator work.
Store the number input to the calculator when an operator button uis pressed also save which operator function is to be used. Then when "=" is pressed you'll need to operate and save the result and display it.

- The display code shoudl be reused
  
*** Gotchas: watch out for and fix these bugs if they show up in your code:
- Users should be able to string together several operations and get the right answer, with each pair of numbers being evaluated at a time. For example, 12 + 7 - 5 * 3 = should yield 42. An example of the behavior we’re looking for would be this student solution.
- Your calculator should not evaluate more than a single pair of numbers at a time. Example: you press a number button (12), followed by an operator button (+), a second number button (7), and finally a second operator button (-). Your calculator should then do the following: first, evaluate the first pair of numbers (12 + 7), second, display the result of that calculation (19), and finally, use that result (19) as the first number in your new calculation, along with the next operator (-).
- You should round answers with long decimals so that they don’t overflow the screen.
- Pressing = before entering all of the numbers or an operator could cause problems!
- Pressing “clear” should wipe out any existing data.. make sure the user is really starting fresh after pressing “clear”
- Display a snarky error message if the user tries to divide by 0… and don’t let it crash your calculator!
  
*** Extra Credit
- Users can get floating point numbers if they do the math required to get one, but they can’t type them in yet. Add a . button and let users input decimals! Make sure you don’t let them type more than one though: 12.3.56.5. It is hard to do math on these numbers. (disable the decimal button if there’s already one in the display)
- Make it look nice! This is a great project to practice your CSS skills. At least make the operations a different color from the keypad buttons.
- Add a “backspace” button, so the user can undo if they click the wrong number.
- Add keyboard support!

